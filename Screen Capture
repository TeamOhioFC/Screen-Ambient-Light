import java.awt.Color;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import java.util.*;


public class ScreenCapture
{
    //Class Variables
	BufferedImage screenShot;
	
    int r;
    int g;
    int b;
    

    public void refreshRobo() throws Exception{
        Robot robot = new Robot();
        screenShot = robot.createScreenCapture(new Rectangle(Toolkit.getDefaultToolkit().getScreenSize()));
    }
    
    public BufferedImage getImage(){
    	return screenShot;
    }
    
    public int getRed(){
    	return r;
    }
    
    public int getGreen(){
    	return g;
    }
    
    public int getBlue(){
    	return b;
    }
    
    public void analyzeImage(){
    	//Get Screen Size
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        double width = screenSize.getWidth();
        double height = screenSize.getHeight();
        System.out.println(width);
        
        r=0;
        g=0;
        b=0;
    	
    	//Skip every alternate pixel making my program 4 times faster
    	for(int i =0;i<width; i=i+2){
    		for(int j=0; j<height;j=j+2){
    			int pixel = screenShot.getRGB(i,j); //the ARGB integer has the colors of pixel (i,j)
    			r = r+(int)(255&(pixel>>16)); //add up reds
    			g = g+(int)(255&(pixel>>8)); //add up greens
    			b = b+(int)(255&(pixel)); //add up blues
    		}
    	}
    	
    	r = r/(int)((width/2)*(height/2));
    	g = g/(int)((width/2)*(height/2));
    	b = b/(int)((width/2)*(height/2));
    	
    	//r=r/(684*464); //average red (remember that I skipped ever alternate pixel)
    	//g=g/(684*464); //average green
    	//b=b/(684*464); //average blue


    	//port.write(0xff); //write marker (0xff) for synchronization
    	//port.write((byte)(r)); //write red value
    	//port.write((byte)(g)); //write green value
    	//port.write((byte)(b)); //write blue value
    	//delay(10); //delay for safety

    	//background(r,g,b); //make window background average color
    }

    public static void main(String[] args) throws Exception
    {
    	ScreenCapture test = new ScreenCapture();
    	int n = 0;
        while(true)
        {
            test.refreshRobo();
            test.analyzeImage();
            n++;
            System.out.println("RUN: "+n);
            System.out.println("Red: "+test.getRed());
            System.out.println("Green: "+test.getGreen());
            System.out.println("Blue: "+test.getBlue()+"\n");
            Thread.sleep(10000);
        }
    }
}
